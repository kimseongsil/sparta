<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>

    <style>
        table {
            font-family: Arial, Helvetica, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }
        

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }
    </style>
  </head>
  <body>
    <p>hello good morning</p>
    <p><b> - Bold text</b></p>
    <p><strong style="color: yellowgreen"> - Important text</strong></p>
    <p><i> - Italic text 기울기</i></p>
    <p><em> - Emphasized text 덜기움</em></p>
    <p><mark> - Marked text 형광펜</mark></p>
    <p><small> - Smaller text</small></p>
    <p><del> - Deleted text 중간줄</del></p>
    <p><ins> - Inserted text 밑줄</ins></p>
    <p><sub> - Subscript text</sub></p>
    <p><sup> - Superscript text</sup></p>
    <p>
      WWF's goal is to:
      <q>Build a future where people live in harmony with nature.</q>
    </p>
    <p>
      WWF's goal is to: "Build a future where people live in harmony with
      nature."
    </p>

    <!--
    해당 target속성은 링크된 문서를 열 위치를 지정합니다.

    속성은 target다음 값 중 하나를 가질 수 있습니다.
    _self   - 기본값. 클릭한 것과 같은 창/탭에서 문서를 엽니다.
    _blank  - 새 창이나 탭에서 문서를 엽니다.
    _parent - 부모 프레임에서 문서를 엽니다.
    _top    - 창의 전체 본문에서 문서를 엽니다.
    
    
    style에서 link일 때랑 visited일 때 색상 다르게 할 수 있음.
    hover 마우스 커서 올려놓았을 때
    focus 해당 요소에 초점 맞춰졌을 때
    active 마우스로 누르고 있을 때

    a:link, hover, focus, active, visited
    
    -->

    <a href="https://www.w3schools.com/" target="_blank">Visit W3Schools!</a> 


    <table>
        <tr>
            <th>회사</th>
            <th>개인</th>
            <th>나라</th>
        </tr>
        <tr>
            <td>일</td>
            <td>놀기</td>
            <td>세금</td>
        </tr>
        <tr>
            <td>월급</td>
            <td>자기</td>
            <td>복지</td>
        </tr>
    </table>
  </body>
</html>


<!--
<body>
  <h2>Use of The class Attribute in JavaScript</h2>
  <p>Click the button to hide all elements with class name "city":</p>
  <button onclick="myFunction()">Hide elements</button>
  <h2 class="city">London</h2>
<p>London is the capital of England.</p>

<h2 class="city">Paris</h2>
<p>Paris is the capital of France.</p>

<h2 class="city">Tokyo</h2>
<p>Tokyo is the capital of Japan.</p>


  <script>
      function myFunction() { //함수이름
          var x = document.getElementsByClassName("city"); //이거로 호출해서 클래스명이 시티인 요소를 선택해서 x라는 변수에 저장함
          for (var i=0; i<x.length;i++) { //x의 길이만큼 반복하는 루프 length: 길이, 시간
              x[i].style.display="none"; //x요소를 페이지에서 보이지 않게 함
          }
      }
  </script>
</body>
</html>
-->

------------------------------------------------------------------------------------------------------------------------------
doctype : 마크업 언어에서 문서 형식을 정의. 웹브라우저가 html버전의 어떤 해석 방식으로 페이지를 이해하면 되는지를 알려주는 용도.
! 문서 유형 선언이 특수한 문법적 요소임 나타냄. 브라우저가 HTML 문서를 올바르게 처리할 수 있도록 돕는 역할.
html : 페이지, 문서 전체의 범위 // html5 (표준)  html1, 2, 3, 4, xhtml 있음 
html 문서가 어디서 시작해서 어디서 끝나는지 브라우저에게 알려주는 역할 함
브라우저, 컴퓨터가 이해할 수 있는 언어를 제공해줘야하는데 그게 html로 문서를 만들고 제공하는 것.

head : 문서의 정보를 나타내는 범위.
웹 브라우저가 해석해야할 웹페이지의 제목, 설명, 사용할 파일 위치, CSS 같은 웹페이지의 보이지 않는 정보를 작성하는 범위
(눈에 보이지 않는 정보)

body : 문서의 구조를 나타내는 범위
사용자 화면을 통해 보이는 로고, 헤더, 푸터, 내비게이션, 메뉴, 버튼, 이미지 같은 웹페이지의 보이는 구조를 작성하는 범위.
(눈에 보이지 않는 구조)

document getElementsById 자바스크립트 공부하기 위해 가장 처음 이해해야하는 용어.
document : 문서를 지칭함(html이나 jsp등)
getElementsById('N') : id가 'N'인 HTML 및 JSP요소를 찾음
. : ~의, ~인
------------------------------------------------------------------------------------------------------------------------------

display : 요소를 어떤 형태로 나타나게 할 것인지를 말하는 속성 (어떻게 표시할지)
- block, inline-block, inline, none
visibility : 보일지 말지

inline : 요소끼리 서로 한 줄에, 바로 옆에 위치 할 수 있음
block : 좌우측에 다른 요소 붙여넣을 수 없음
inline-block : inline처럼 옆에 위치할 수 있고 width와 height 속성 지정 및 margin과 padding 속성의 상하간격 지정이 가능.
none : 박스가 생성되지 않아서 공간차지 안함

<div class="alert-box" id="alertBox">
        <p id="alertFont">aaa</p>
        <button id="alertClose">닫기</button>
    </div>

    <button onclick="alertBox('아이디를 입력하세요')">버튼1</button>
    <button onclick="alertBox('비밀번호를 입력하세요')">버튼2</button>

    <script>
        function alertBox(value) { 
            document.getElementById("alertBox").style.display="block"; //"" 직접 입력하는 값
            document.getElementById("alertFont").innerHTML = value; //변수
        }
        -> alertBox를 누르면 보이게 하고 값도 넣어준다.
        그래서 버튼을 누르면 아이디 입력해라 비번 입력해라가 뜬다.

        document.getElementById('alertClose').addEventListener('click', function() {
            document.getElementById('alertBox').style.display = 'none';
        });
        -> 닫기를 누르면 alertBox가 닫혀서 안보이게 된다.


 <div class="alert-box" id="alertBox">
 -> div에 alert-box 클래스 넣음 첫번째꺼라 0
    <p class="alert-box">aaa</p>
 ->   p에 alert-box 클래스 넣음 두번째꺼라 1
    <button id="alertClose">닫기</button>
</div>

<button onclick="alertBox('아이디를 입력하세요')">버튼1</button>
버튼 1번 누르면 아이디를 입력하세요 나와라
<button onclick="alertBox('비밀번호를 입력하세요')">버튼2</button>
버튼 2번 누르면 비밀번호를 입력하세요 나와라

<script>
        function alertBox(value) {
            document.getElementsByClassName("alert-box")[1].innerHTML = value;
 -> 아이디를 입력하세요, 비밀번호를 입력하세요 글자를 가져옴
            document.getElementsByClassName("alert-box")[0].style.display = 'block';
 -> div 갖고와서 보이게 해줌
                        document.getElementsByClassName("alert-box")[1].style.display = 'block';
 ->글자를 보이게 해줌
        }

        document.getElementById('alertClose').addEventListener('click', function() {
            document.getElementById('alertBox').style.display = 'none';
        });
        -> 클로즈에 들어가있는 버튼 닫기를 클릭하면 alertBox값을 안보이게 한다

</script>


<body>
    <script>
        function blockOpen() {
            document.getElementById('alertBox').style.display='block';
        }
        -> 열기를 누르면 id alertBox가 보인다.

        function blockClose() {
            document.getElementById('alertBox').style.display='none';
                }
                -> 닫기를 누르면 id alertBox가 안보인다.
    </script>

    <div class="alert-box" id="alertBox">
        <a>알림창</a>
        <button onclick="blockClose()">닫기</button>
    </div>
    <button onclick="blockOpen()">열기</button>
</body>


function [함수명]([매개변수]) {
  [소스코드];
  return[리턴값];
}


<body>
    <div class="container" id="container">
        <div class="item" id="div1">div</div>
        <div class="item" id="div2">div</div>
    </div>

    <script>
        let container = document.querySelector(".container");
        클래스가 container인 첫번째 요소를 선택함
        let div0=document.querySelector("div");
        첫번째로 발견된 div요소를 선택함
        let div1=document.querySelector(".item");
        item의 첫번째 요소를 선택해서 div1
        let div2=document.querySelector("#div2");
        id가 div2인것을 선택

        console.log(container.id)
        class container의 아이디 container값 출력
        console.log(div0.id)
        첫번째로 선택된 div의 아이디 container 가져옴
        console.log(div1.id)
        첫번째로 선택된 item의 아이디 div1 가져옴
        console.log(div2.id)
        class div2의 div2가져옴
    </script>
</body>

document.querySelector('p') 첫번째 p요소 선택
document.querySelector('.my-class') my-class class를 가진 첫번째 요소 선택
document.querySelector('#my-id') my-id라는 id를 가진 요소 선택

document.querySelector('[data-my-attribute]') data-my-attribute 속성이 있는 첫번째 요소 선택
document.querySelector('div>p') div요소의 직계 자식 요소 중 첫번째 p요소 선택
document.querySelectorAll('p, .my-class') 모든 p요소와 my-class라는 클래스를 가진 모든 요소를 선택